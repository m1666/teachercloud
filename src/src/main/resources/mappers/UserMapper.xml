<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teachercloud.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.teachercloud.pojo.User">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, name, status, question, answer, role, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.teachercloud.pojo.User">
    insert into user (id, username, password, 
      name, status, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
      now())
  </insert>
    <insert id="insertSelective" parameterType="com.teachercloud.pojo.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="role != null">
                role,
            </if>
            create_time,
            update_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            now(),
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.teachercloud.pojo.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.teachercloud.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        from user
        where username = #{username}
        and password = #{password}
    </select>
    <select id="checkUsername" resultType="int" parameterType="string">
    select count(1) from user
    where username = #{username}
  </select>
    <select id="selectQuestionByUsername" resultType="string" parameterType="string">
    select
    question
    from user
    where username = #{username}
  </select>
    <select id="checkAnswer" resultType="int" parameterType="map">
    select
    count(1)
    from user
    where username = #{username}
    and question = #{question}
    and answer = #{answer}
  </select>
    <update id="updatePasswordByUsername" parameterType="map">
    update user
    set password = #{passwordNew},update_time = now()
    where username = #{username}
  </update>
    <select id="checkPassword" resultType="int" parameterType="map">
        select
        count(1)
        from user
        where password = #{password}
        and id = #{userId}
    </select>
    <select id="selectByKeyWordAndColumn" resultType="Map" parameterType="map">
        select
        id,username,name,status, question,answer, role, create_time,update_time
        from user
        where #{column}
        like #{keyword}
        <if test="role != -1">
            and role = #{role}
        </if>
    </select>
    <select id="selectStudentInfoByUserId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from user
        where #{column} like #{keyword}
        and id in
        <foreach item="userId" collection="userId" open="(" separator="," close=")">
            #{userId.user_id}
        </foreach>
        and role = #{role}
    </select>
    <update id="updateStatus" parameterType="map">
        update user
        set
        status = #{status},
        update_time = now()
        where id in
        <foreach item="userId" collection="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>
    <delete id="deleteUsers" parameterType="map">
        delete from user
        where id in
        <foreach item="userId" collection="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>