<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teachercloud.dao.ClassCourseMapper" >
  <resultMap id="BaseResultMap" type="com.teachercloud.pojo.ClassCourse" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="class_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_id, class_id, create_time, end_time, update_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from class_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from class_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.teachercloud.pojo.ClassCourse" >
    insert into class_course (id, course_id, class_id, 
      create_time, end_time, update_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{classId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.teachercloud.pojo.ClassCourse" >
    insert into class_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.teachercloud.pojo.ClassCourse" >
    update class_course
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teachercloud.pojo.ClassCourse" >
    update class_course
    set course_id = #{courseId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCourseIdByClassId" resultType="java.lang.Integer" parameterType="Long">
    select course_id
    from class_course
    where class_id = #{classId}
  </select>
  <select id="selectCourseIdByAllClassId" resultType="java.lang.Integer" parameterType="Long">
    select course_id
    from class_course
    where class_id in
    <foreach item="classId" collection="classId" open="(" separator="," close=")">
      #{classId}
    </foreach>
    group by course_id;
  </select>
  <update id="updateClassCourseStatusBybatch" parameterType="map">
    update class_course
    set status = #{status}
    where id in
    <foreach item="ids" collection="ids" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </update>
</mapper>